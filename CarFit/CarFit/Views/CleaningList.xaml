<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms" 
             xmlns:yummy="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView" 
             xmlns:views="clr-namespace:CarFit.Views;assembly=CarFit"
             xmlns:vm="clr-namespace:CarFit.ViewModels;assembly=CarFit"
             xmlns:prism="http://prismlibrary.com"
             xmlns:valueConverter="clr-namespace:CarFit.Common.ValueConverter;assembly=CarFit"
             xmlns:calCtrl="clr-namespace:XamForms.Controls;assembly=XamForms.Controls.Calendar"  
             mc:Ignorable="d"
             d:NavigationPage.HasNavigationBar="False"
             Title="Cleaning List"
             BackgroundColor="#f2f2ef"
             x:Class="CarFit.Views.CleaningList">

    <!--prism:ViewModelLocator.AutowireViewModel="True"-->

    <ContentPage.BindingContext>
        <vm:CleaningListViewModel></vm:CleaningListViewModel>
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <valueConverter:InverseBoolConverter x:Key="InverseBool"></valueConverter:InverseBoolConverter>
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- <TapGestureRecognizer Command="{Binding PageTapCommand}"  NumberOfTapsRequired="1"></TapGestureRecognizer>-->

    <ContentPage.Content>

        <RefreshView IsRefreshing="{Binding IsRefreshing}" RefreshColor="Red"    
                     Command="{Binding RefreshViewCommand}">
            <ScrollView>

                <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                    <!--page content wrapper-->

                    <!--Calender wrapper-->
                    <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"
                         IsVisible="{Binding IsCalenderVisible,UpdateSourceEventName=PropertyChanged}"
                         >
                        <calCtrl:Calendar Padding="25,0,25,0"
                                  SelectedBorderWidth="2"   
                                  DisabledBorderColor="Black"  
                                  ShowNumberOfWeek="false"
                                  StartDay="Monday"  
                                  TitleLabelTextColor="Purple"  
                                  TitleLeftArrowTextColor="Blue"  
                                  SelectedDate="{Binding FromDate}"
                                  VerticalOptions="FillAndExpand"
                                  HorizontalOptions="FillAndExpand"
                                  DateClicked="Calendar_OnDateClicked"
                />
                    </StackLayout>


                    <AbsoluteLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand"
                            IsVisible="False"
            >
                        <!--IsVisible="{Binding IsCalenderVisible,UpdateSourceEventName=PropertyChanged}"-->
                        <StackLayout>
                            <views:Calendar IsVisible="True"></views:Calendar>
                        </StackLayout>

                        <Button
                    x:Name="BtnCLoseCalender"
                    BackgroundColor="LightGray"
                    Text="[ X ]"
                    Padding="0,0"
                    CornerRadius="{OnPlatform iOS='20', Android='30'}"
                    HeightRequest="25"
                    WidthRequest="40"
                    AbsoluteLayout.LayoutFlags="XProportional"
                    AbsoluteLayout.LayoutBounds="1,0"
                    Margin="0,5,5,0"
                    Command="{Binding PageTapCommand}"
                    >
                            <!--<Button.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding PageTapCommand}"  NumberOfTapsRequired="1"></TapGestureRecognizer>
                    </Button.GestureRecognizers>-->

                        </Button>
                    </AbsoluteLayout>

                    <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped"></TapGestureRecognizer>
                        </StackLayout.GestureRecognizers>

                        <Grid Padding="0" 
                      IsVisible="{Binding IsCalenderVisible,UpdateSourceEventName=PropertyChanged,Converter={StaticResource InverseBool}}"
                      >
                            <!--IsVisible="{Binding IsCalenderVisible,UpdateSourceEventName=PropertyChanged,Converter={StaticResource InverseBool}}"-->
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <Label x:Name="PageHeading" Grid.Row="0" Grid.Column="0" Margin="{OnPlatform iOS='65,60,0,0', Android='65,30,20,0'}" 
                       Text="{Binding FilterDate,UpdateSourceEventName=PropertyChanged}"
                       Style="{StaticResource PageHeading}" 
                       HorizontalTextAlignment="Center"
                       FontFamily="{StaticResource BoldFont}" />

                            <ffimageloadingsvg:SvgCachedImage Margin="{OnPlatform iOS='0,60,0,0', Android='0,30,20,0'}" 
                        Source="Calender.svg" 
                        WidthRequest="20" 
                        Grid.Row="0" Grid.Column="1"
			        >
                                <ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ShowCalenderCommand}"  NumberOfTapsRequired="1"></TapGestureRecognizer>
                                </ffimageloadingsvg:SvgCachedImage.GestureRecognizers>
                            </ffimageloadingsvg:SvgCachedImage>
                        </Grid>

                        <CollectionView ItemsSource="{Binding CleaningList,UpdateSourceEventName=PropertyChanged}" Margin="20,20,20,20"
                                >
                            <CollectionView.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped"></TapGestureRecognizer>
                            </CollectionView.GestureRecognizers>

                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <StackLayout Margin="0, 0, 0, 15">
                                        <StackLayout.GestureRecognizers>
                                            <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped"></TapGestureRecognizer>
                                        </StackLayout.GestureRecognizers>

                                        <Frame                               
                                HorizontalOptions="StartAndExpand"
                                VerticalOptions="StartAndExpand"                                
                                Padding="10,20,0,10" 
                                HasShadow="False"
                                IsClippedToBounds="True" BackgroundColor="#ffffff" CornerRadius="15" >

                                            <views:CleaningListDataTemplate></views:CleaningListDataTemplate>


                                        </Frame>
                                    </StackLayout>


                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>

                    </StackLayout>


                </StackLayout>


            </ScrollView>
        </RefreshView>

    </ContentPage.Content>

</ContentPage>